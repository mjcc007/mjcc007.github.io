{"version":3,"file":"static/js/310.f2b8761e.chunk.js","mappings":"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","sources":["components/id-selec.tsx","components/userSelect.tsx","screens/project-list/search-panel.tsx","components/pin.tsx","screens/project-list/list.tsx","screens/project-list/index.tsx","utils/user.ts","screens/project-list/util.ts","utils/project.ts","utils/url.ts","utils/reorder.ts","utils/use-optimistic-options.ts"],"sourcesContent":["import { Select } from \"antd\";\nimport React from \"react\";\nimport { Raw } from \"types\";\n\ntype SelectProps = React.ComponentProps<typeof Select>;\n\ninterface IdSelectProps\n  extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\n  value?: Raw | null | undefined;\n  onChange?: (value?: number) => void;\n  defaultOptName?: string;\n  options?: { name: string; id: number }[];\n}\n\nexport function IdSelect(props: IdSelectProps) {\n  const { value, onChange, defaultOptName, options, ...restProps } = props;\n\n  const toNumber = (value: unknown) =>\n    isNaN(Number(value)) ? 0 : Number(value);\n\n  return (\n    <Select\n      value={toNumber(value)}\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\n      {...restProps}\n    >\n      {defaultOptName ? (\n        <Select.Option value={0}>{defaultOptName}</Select.Option>\n      ) : null}\n      {options?.map((option) => (\n        <Select.Option value={option.id} key={option.id}>\n          {\" \"}\n          {option.name}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useDoMount } from \"utils\";\nimport { useHttp } from \"utils/http\";\nimport { IdSelect } from \"./id-selec\";\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const [users, setUsers] = useState([]);\n  const client = useHttp();\n  useDoMount(() => {\n    client(\"users\").then(setUsers);\n    // eslint-disable-next-line  react-hooks/exhaustive-deps\n  });\n  return <IdSelect options={users || []} {...props} />;\n};\n","import styled from \"@emotion/styled\";\nimport { Input } from \"antd\";\nimport { UserSelect } from \"components/userSelect\";\nimport React from \"react\";\nimport { Project, User } from \"types\";\n\ninterface SearchPanelProps {\n  users: User[];\n  param: Partial<Pick<Project, \"name\" | \"personId\">>;\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\n\nexport const SearchPanel = (props: SearchPanelProps) => {\n  const { param, setParam } = props;\n\n  return (\n    <form>\n      <Container>\n        <Input\n          type=\"text\"\n          value={param.name}\n          onChange={(evt) => setParam({ ...param, name: evt.target.value })}\n        />\n        <UserSelect\n          value={param.personId}\n          defaultOptName={\"负责人\"}\n          onChange={(value: number | undefined) =>\n            setParam({\n              ...param,\n              personId: value,\n            })\n          }\n        />\n      </Container>\n    </form>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  width: 50rem;\n  flex-direction: row;\n`;\n","import { Rate } from \"antd\";\nimport React from \"react\";\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nexport const Pin = ({ checked, onCheckedChange, ...resetProps }: PinProps) => {\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...resetProps}\n    />\n  );\n};\n","import { Dropdown, Menu, Modal, Table } from \"antd\";\nimport { ButtonNoPadding } from \"components/lib\";\nimport { Pin } from \"components/pin\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Project, User } from \"types\";\nimport { useDelProject, useEditProject } from \"utils/project\";\n\nimport { useProjectModel, useProjectsQueryKey } from \"./util\";\n\ninterface ListProps {\n  list: Project[];\n  users: User[];\n  loading: boolean;\n  refresh?: () => void;\n}\nexport const List = ({ list, users, loading, refresh }: ListProps) => {\n  const navigate = useNavigate();\n  const goToProject = (record: Project) => {\n    navigate(`/project/${record.id}/kanban`);\n  };\n\n  const { mutate } = useEditProject(useProjectsQueryKey());\n\n  const { mutate: del } = useDelProject(useProjectsQueryKey());\n  const confirmDelProject = (id: number) => {\n    Modal.confirm({\n      title: \"确定删除该项目？\",\n      content: \"点击确定删除！\",\n      okText: \"确定\",\n      onOk() {\n        del({ id });\n      },\n    });\n  };\n\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n\n  const { startEdit } = useProjectModel();\n\n  return (\n    <Table\n      loading={loading}\n      pagination={false}\n      columns={[\n        {\n          key: \"pin\",\n          title: <Pin checked={true} disabled={true} />,\n          render(val, project) {\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={pinProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          key: \"name\",\n          title: \"名称\",\n          dataIndex: \"name\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n        },\n        {\n          key: \"organization\",\n          title: \"部门\",\n          dataIndex: \"organization\",\n        },\n        {\n          key: \"personId\",\n          title: \"负责人\",\n          render(value, project) {\n            return (\n              <span>\n                {users.find((user) => user.id === project.personId)?.name ||\n                  \"未知\"}\n              </span>\n            );\n          },\n        },\n        {\n          key: \"created\",\n          title: \"创建时间\",\n          render(value, project) {\n            return (\n              <span>\n                {project.created\n                  ? dayjs(project.created).format(\"YYYY-MM-DD\")\n                  : \"无\"}\n              </span>\n            );\n          },\n        },\n        {\n          title: \"Action\",\n          key: \"action\",\n          render: (_, record) => (\n            <Dropdown\n              overlay={\n                <Menu\n                  items={[\n                    {\n                      label: (\n                        <ButtonNoPadding\n                          type=\"link\"\n                          onClick={() => goToProject(record)}\n                        >\n                          查看\n                        </ButtonNoPadding>\n                      ),\n                      key: \"view\",\n                    },\n                    {\n                      label: (\n                        <ButtonNoPadding\n                          type=\"link\"\n                          onClick={() => startEdit(record.id)}\n                        >\n                          编辑\n                        </ButtonNoPadding>\n                      ),\n                      key: \"edit\",\n                    },\n                    {\n                      label: (\n                        <ButtonNoPadding\n                          type=\"link\"\n                          onClick={() => confirmDelProject(record.id)}\n                        >\n                          删除\n                        </ButtonNoPadding>\n                      ),\n                      key: \"del\",\n                    },\n                  ]}\n                />\n              }\n            >\n              <ButtonNoPadding type=\"link\">...</ButtonNoPadding>\n            </Dropdown>\n          ),\n        },\n      ]}\n      dataSource={list}\n    />\n  );\n};\n","import React from \"react\";\nimport { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\n\nimport { useProjectModel, useProjectSearchParams } from \"./util\";\nimport { useProjects } from \"utils/project\";\nimport { useUsers } from \"utils/user\";\nimport { useDebounce } from \"utils\";\nimport { ButtonNoPadding, Row } from \"components/lib\";\n\nexport default function ProjectListScreen() {\n  const [param, setParam] = useProjectSearchParams();\n\n  const { isLoading, data: list } = useProjects(useDebounce(param, 200));\n\n  const { data: users } = useUsers();\n\n  const { open } = useProjectModel();\n\n  return (\n    <div style={{ flex: 1 }}>\n      <Row between={true}>\n        <h3>项目列表</h3>\n        <ButtonNoPadding type=\"link\" onClick={open}>\n          创建项目\n        </ButtonNoPadding>\n      </Row>\n      <SearchPanel\n        users={users || []}\n        param={param}\n        setParam={setParam}\n      ></SearchPanel>\n      <List\n        // refresh={retry}\n        loading={isLoading}\n        list={list || []}\n        users={users || []}\n      ></List>\n    </div>\n  );\n}\n","import { useHttp } from \"utils/http\";\nimport { useAsync } from \"utils/useAsync\";\nimport { useEffect } from \"react\";\nimport { cleanObject } from \"utils/index\";\nimport { User } from \"types\";\n\nexport const useUsers = (param?: Partial<User>) => {\n  const client = useHttp();\n  const { run, ...result } = useAsync<User[]>();\n\n  useEffect(() => {\n    run(client(\"users\", { data: cleanObject(param || {}) }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [param]);\n\n  return result;\n};\n","import { PROJECT_KEY, useProjectDetail } from \"./../../utils/project\";\nimport { useMemo } from \"react\";\nimport { useSetUrlSearchParam, useUrlQueryParam } from \"utils/url\";\n\nexport const useProjectSearchParams = () => {\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\n  return [\n    useMemo(\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\n      [param]\n    ),\n    setParam,\n  ] as const;\n};\n\nexport const useProjectsQueryKey = () => {\n  const [params] = useProjectSearchParams();\n  return [PROJECT_KEY, params];\n};\n\nexport const useProjectModel = () => {\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\n    \"projectCreate\",\n  ]);\n\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\n    \"editingProjectId\",\n  ]);\n\n  const { data: editingProject, isLoading } = useProjectDetail(\n    Number(editingProjectId)\n  );\n\n  const setUrlSearchParam = useSetUrlSearchParam();\n\n  const open = () => setProjectCreate({ projectCreate: true });\n\n  const close = () =>\n    setUrlSearchParam({ projectCreate: \"\", editingProjectId: \"\" });\n\n  const startEdit = (id: number) =>\n    setEditingProjectId({ editingProjectId: id });\n\n  return {\n    isOpen: projectCreate === \"true\" || Boolean(editingProjectId),\n    open,\n    close,\n    startEdit,\n    editingProject,\n    isLoading,\n  };\n};\n","import { useHttp } from \"./http/index\";\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n} from \"./use-optimistic-options\";\nimport { Project } from \"types\";\nexport const PROJECT_KEY = \"PROJECTS\";\n\nexport const useProjects = (params?: Partial<Project>) => {\n  const client = useHttp();\n  // 第二个参数，param改变 触发重新请求\n  return useQuery<Project[]>([PROJECT_KEY, params], () =>\n    client(\"projects\", { data: params })\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects/${params.id}`, { method: \"PATCH\", data: params }),\n    useEditConfig(queryKey)\n  );\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`projects`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDelProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) => client(`projects/${id}`, { method: \"DELETE\" }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useProjectDetail = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Project>(\n    [\"project\", { id }],\n    () => client(`projects/${id}`),\n    { enabled: Boolean(id) }\n  );\n};\n","import { cleanObject } from \"./index\";\nimport { useMemo } from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\n\nexport const useUrlQueryParam = <K extends string>(keys: K[]) => {\n  const [searchParams] = useSearchParams();\n  const setSearchParams = useSetUrlSearchParam();\n  return [\n    useMemo(\n      () =>\n        keys.reduce((prev, key) => {\n          return { ...prev, [key]: searchParams.get(key) || \"\" };\n        }, {} as { [key in K]: string }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [searchParams]\n    ),\n    (params: Partial<{ [key in K]: unknown }>) => {\n      setSearchParams(params);\n    },\n  ] as const;\n};\n\nexport const useSetUrlSearchParam = () => {\n  const [searchParams, setSearchParam] = useSearchParams();\n  return (params: { [key in string]: unknown }) => {\n    const o = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParam(o);\n  };\n};\n","/**\n * 在本地对排序进行乐观更新\n * @param fromId 要排序的项目的id\n * @param type 'before' | 'after'\n * @param referenceId 参照id\n * @param list 要排序的列表, 比如tasks, kanbans\n */\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","import { QueryKey, useQueryClient } from \"react-query\";\nimport { Task } from \"types\";\nimport { reorder } from \"./reorder\";\n\nexport const useConfig = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any[]) => any[]\n) => {\n  const queryClient = useQueryClient();\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    async onMutate(target: any) {\n      const previousItem = queryClient.getQueryData(queryKey);\n\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        return callback(target, old);\n      });\n      return { previousItem };\n    },\n    onError(err: any, newItem: any, context: any) {\n      queryClient.setQueryData(queryKey, context?.previousItem);\n    },\n  };\n};\n\nexport const useDeleteConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\n  );\n\nexport const useEditConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  );\n\nexport const useAddConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\n\nexport const useReorderConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => old || []);\n\nexport const useReorderKanbanConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\n\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => {\n    const orderedList = reorder({ list: old, ...target }) as Task[];\n    return orderedList.map((item) =>\n      item.id === target.fromId\n        ? { ...item, kanbanId: target.toKanbanId }\n        : item\n    );\n  });\n"],"names":["IdSelect","props","value","onChange","defaultOptName","options","restProps","toNumber","isNaN","Number","undefined","map","option","id","name","UserSelect","useState","users","setUsers","client","useHttp","useDoMount","then","SearchPanel","param","setParam","Container","type","evt","target","personId","styled","Pin","checked","onCheckedChange","resetProps","count","num","List","list","loading","navigate","refresh","useNavigate","mutate","useEditProject","useProjectsQueryKey","del","useDelProject","startEdit","useProjectModel","pagination","columns","key","title","disabled","render","val","project","pin","dataIndex","sorter","a","b","localeCompare","find","user","created","dayjs","format","_","record","overlay","items","label","onClick","goToProject","Modal","content","okText","onOk","dataSource","ProjectListScreen","useProjectSearchParams","useProjects","useDebounce","isLoading","data","useAsync","run","result","useEffect","cleanObject","useUsers","open","style","flex","between","useUrlQueryParam","useMemo","params","PROJECT_KEY","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","useProjectDetail","editingProject","setUrlSearchParam","useSetUrlSearchParam","isOpen","Boolean","close","useQuery","queryKey","useMutation","method","useEditConfig","useAddProject","useAddConfig","useDeleteConfig","enabled","keys","useSearchParams","searchParams","setSearchParams","reduce","prev","get","setSearchParam","o","Object","fromEntries","reorder","fromId","referenceId","copiedList","movingItemIndex","findIndex","item","insertAfter","length","targetIndex","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf","useConfig","callback","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","previousItem","getQueryData","setQueryData","old","onError","err","newItem","context","filter","useReorderKanbanConfig","useReorderTaskConfig","kanbanId","toKanbanId"],"sourceRoot":""}